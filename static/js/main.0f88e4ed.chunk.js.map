{"version":3,"sources":["components/Header.tsx","action-creators/actionTypes.ts","models/todos.ts","action-creators/todos.ts","components/AddTodo.tsx","utils/uuid.ts","selectors/index.ts","selectors/todos.ts","components/TodoCard.tsx","components/TodoList.tsx","App.tsx","reducers/todos.ts","reducers/index.ts","store.ts","reportWebVitals.ts","index.tsx"],"names":["Header","TodoActions","TodoStatus","size","setTodoStatus","id","status","payload","type","UPDATE_STATUS","AddTodo","dispatch","useDispatch","useState","todoText","setTodoText","addTodoHandler","content","uuidv4","created","Date","TODO","ADD","addTodo","onSubmit","event","preventDefault","kind","expanded","placeholder","value","onChange","e","target","color","onClick","useTypedSelector","useSelector","getTodosState","store","todos","getAllTodos","allIds","getTodoList","map","byIds","undefined","getTodoById","AwaitButton","props","TodoCardAction","icon","faClock","tooltip","disabled","onClickHandler","DoneButton","faCheckSquare","outlined","TodoCard","TodoListTabIndex","Item","subtitle","todo","toLocaleString","align","AWAITING","DONE","TodoList","activeTabIndex","setActiveTabIndex","tabConfig","index","title","AWAIT","isTabSelected","state","statusType","filter","getTodosByStatus","Group","fullwidth","item","active","App","fluid","initialTodoState","reducer","action","combineReducers","todoReducer","createStore","rootReducer","devToolsEnhancer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAWeA,ICGHC,ECPAC,EFIGF,EARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOG,KAAM,EAAb,gC,kBCQMF,K,UAAAA,E,+BAAAA,M,cCPAC,K,YAAAA,E,oBAAAA,E,aAAAA,M,iBCHZ,IAcME,EAAgB,SAACC,EAAYC,GACjC,IAAMC,EAAU,CACdF,KACAC,UAEF,MAAO,CACLE,KAAMP,EAAYQ,cAClBF,YCoBWG,MAvCf,WACE,IAAMC,EAAWC,cADA,EAEeC,mBAAiB,IAFhC,mBAEVC,EAFU,KAEAC,EAFA,KAIXC,EAAiB,WACrBL,EDPY,SAACM,GACf,IAAMV,EAAgB,CACpBF,GEHKa,cFILC,QAAS,IAAIC,KACbd,OAAQJ,EAAWmB,KACnBJ,WAGF,MAAO,CACLT,KAAMP,EAAYqB,IAClBf,WCHSgB,CAAQT,IACjBC,EAAY,KAGd,OACE,cAAC,IAAD,UACE,sBAAMS,SAAU,SAACC,GAAD,OAAWA,EAAMC,kBAAjC,SACE,eAAC,IAAD,CAAOC,KAAK,SAAZ,UACE,cAAC,IAAD,CAASC,UAAQ,EAAjB,SACE,cAAC,IAAD,CACEC,YAAY,WACZ1B,KAAK,SACL2B,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OACRjB,EAAYiB,EAAEC,OAAOH,YAK3B,cAAC,IAAD,UACE,cAAC,IAAD,CACEI,MAAM,UACN/B,KAAK,SACLgC,QAAS,kBAAMnB,KAHjB,2BE5BCoB,EAAoDC,ICA3DC,EAAgB,SAACC,GAAD,OAAiCA,EAAMC,OAQvDC,EAAc,SAACF,GAAD,OANA,SAACA,GAAD,OAClBD,EAAcC,GAASD,EAAcC,GAAOG,OAAS,GAMrDC,CAAYJ,GAAOK,KAAI,SAACvC,GAAD,OAJL,SAACkC,EAAkBlC,GAAnB,OAClBiC,EAAcC,GAASD,EAAcC,GAAOM,MAAMxC,QAAMyC,EAGzBC,CAAYR,EAAOlC,O,gBCapD,SAAS2C,EAAYC,GACnB,OACE,cAACC,EAAD,CACEC,KAAMC,IACNC,QAAS,mBACTC,SAAUL,EAAMK,SAChBC,eAAgBN,EAAMM,iBAK5B,SAASC,EAAWP,GAClB,OACE,cAACC,EAAD,CACEC,KAAMM,IACNJ,QAAS,eACTC,SAAUL,EAAMK,SAChBC,eAAgBN,EAAMM,iBAK5B,SAASL,EAAeD,GACtB,IAAM9C,EAAO,SAEb,OACE,cAAC,IAAD,CACEA,KAAMA,EACNuD,UAAU,EACVxB,MAAM,QACNmB,QAASJ,EAAMK,SAAW,cAAgBL,EAAMI,QAChDC,SAAUL,EAAMK,SAChBnB,QAASc,EAAMM,eANjB,SAQE,cAAC,IAAD,CAAMpD,KAAMA,EAAZ,SACE,cAAC,IAAD,CAAiBgD,KAAMF,EAAME,KAAMhD,KAAM,WA0ClCwD,ICxFVC,EDwFUD,EApCf,SAAkBV,GAChB,IAAMtC,EAAWC,cAUjB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAMiD,KAAP,WACE,cAAC,IAAD,CAAOC,UAAQ,EAAC3D,KAAM,EAAtB,SACG8C,EAAMc,KAAK9C,UAEd,gCAAQgC,EAAMc,KAAK5C,QAAQ6C,sBAG7B,eAAC,IAAMH,KAAP,CAAYI,MAAM,QAAlB,UACE,cAACjB,EAAD,CACEO,eAAgB,WAfxB5C,EAASP,EAAc6C,EAAMc,KAAK1D,GAAIH,EAAWgE,YAgBzCZ,SAAUL,EAAMc,KAAKzD,SAAWJ,EAAWgE,WAE7C,cAACV,EAAD,CACED,eAAgB,WAvBxB5C,EAASP,EAAc6C,EAAMc,KAAK1D,GAAIH,EAAWiE,QAwBzCb,SAAUL,EAAMc,KAAKzD,SAAWJ,EAAWiE,iB,SChFlDP,O,eAAAA,I,iBAAAA,I,gBAAAA,M,KAuDUQ,MAjDf,WAAqB,IAAD,EAC0BvD,mBAC1C+C,EAAiBvC,MAFD,mBACXgD,EADW,KACKC,EADL,KAKZC,EAA2B,CAC/B,CACEC,MAAOZ,EAAiBvC,KACxBoD,MAAO,OACPnE,OAAQJ,EAAWmB,MAErB,CACEmD,MAAOZ,EAAiBc,MACxBD,MAAO,WACPnE,OAAQJ,EAAWgE,UAErB,CACEM,MAAOZ,EAAiBO,KACxBM,MAAO,OACPnE,OAAQJ,EAAWiE,OAIjBQ,EAAgB,SAACH,GAAD,OAAmBH,IAAmBG,GAEtDhC,EAAQJ,GAAiB,SAACwC,GAAD,OF/BR,SAACrC,EAAkBsC,GAE1C,OADiBpC,EAAYF,GACbuC,QAAO,SAACf,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMzD,UAAWuE,KE8BhDE,CAAiBH,EAAOL,EAAUF,GAAgB/D,WAGpD,OACE,eAAC,IAAD,WACE,cAAC,IAAI0E,MAAL,CAAWC,WAAS,EAACtD,KAAK,SAA1B,SACG4C,EAAU3B,KAAI,SAACsC,EAAMV,GAAP,OACb,cAAC,IAAD,CAEEW,OAAQR,EAAcO,EAAKV,OAC3BrC,QAAS,kBAAMmC,EAAkBY,EAAKV,QAHxC,SAKGU,EAAKT,OALR,UACUS,EAAKT,MADf,cASHjC,EAAMI,KACL,SAACmB,GAAD,OAAUA,GAAQ,cAAC,EAAD,CAAkCA,KAAMA,GAAxC,UAAkBA,EAAK1D,GAAvB,iB,MC3CX+E,MAZf,WACE,OACE,eAAC,IAAD,CAAWC,OAAK,EAAhB,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,cAAC,EAAD,Q,oCCZOC,EAA8B,CACzC5C,OAAQ,GACRG,MAAO,IAiCM0C,EA9BC,WAA8D,IAA7DX,EAA4D,uDAAzCU,EAAkBE,EAAuB,uCAC3E,OAAQA,EAAOhF,MACb,KAAKP,EAAYqB,IAAM,IACbjB,EAAOmF,EAAOjF,QAAdF,GACR,OAAO,2BACFuE,GADL,IAEElC,OAAO,CAAErC,GAAH,mBAAUuE,EAAMlC,SACtBG,MAAM,2BACD+B,EAAM/B,OADN,kBAEFxC,EAAKmF,EAAOjF,YAInB,KAAKN,EAAYQ,cAAgB,IAAD,EACP+E,EAAOjF,QAAtBF,EADsB,EACtBA,GAAIC,EADkB,EAClBA,OACZ,OAAO,2BACFsE,GADL,IAEE/B,MAAM,2BACD+B,EAAM/B,OADN,kBAEFxC,EAFE,2BAGEuE,EAAM/B,MAAMxC,IAHd,IAIDC,eAMV,OAAOsE,GChCMa,4BAAgB,CAC7BjD,MAAOkD,ICCMC,wBAAYC,EAAaC,2BAAiB,KCS1CC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUlE,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJmE,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f88e4ed.chunk.js","sourcesContent":["import React from 'react';\nimport { Section, Title } from 'rbx';\n\nfunction Header() {\n  return (\n    <Section>\n      <Title size={1}>Get Things Done</Title>\n    </Section>\n  );\n}\n\nexport default Header;\n","import { Todo } from '../models/todos';\n\nexport interface BaseAction<T, U> {\n  type: T;\n  payload: U;\n}\n\nexport type TodoAddAction = BaseAction<TodoActions.ADD, Todo>;\n\nexport type TodoSetStatusAction = BaseAction<\n  TodoActions.UPDATE_STATUS,\n  Pick<Todo, 'id' | 'status'>\n>;\n\nexport enum TodoActions {\n  ADD = 'ADD',\n  UPDATE_STATUS = 'UPDATE_STATUS',\n}\n\nexport type TodoAction = TodoAddAction | TodoSetStatusAction;\n","export interface Todo {\n  id: string;\n  created: Date;\n  content: string;\n  status: TodoStatus;\n}\n\nexport enum TodoStatus {\n  TODO = 'TODO',\n  AWAITING = 'AWAITING',\n  DONE = 'DONE',\n}\n\nexport type TodoState = {\n  allIds: string[];\n  byIds: { [key: string]: Todo };\n};\n","import { TodoActions, TodoAddAction, TodoSetStatusAction } from './actionTypes';\nimport { Todo, TodoStatus } from '../models/todos';\nimport { generateUuid } from '../utils/uuid';\n\nconst addTodo = (content: string): TodoAddAction => {\n  const payload: Todo = {\n    id: generateUuid(),\n    created: new Date(),\n    status: TodoStatus.TODO,\n    content,\n  };\n\n  return {\n    type: TodoActions.ADD,\n    payload,\n  };\n};\n\nconst setTodoStatus = (id: string, status: TodoStatus): TodoSetStatusAction => {\n  const payload = {\n    id,\n    status,\n  };\n  return {\n    type: TodoActions.UPDATE_STATUS,\n    payload,\n  };\n};\n\nexport { addTodo, setTodoStatus };\n","import React, { useState } from 'react';\nimport { Button, Control, Field, Input, Section } from 'rbx';\nimport { useDispatch } from 'react-redux';\n\nimport { addTodo } from '../action-creators/todos';\n\nfunction AddTodo() {\n  const dispatch = useDispatch();\n  const [todoText, setTodoText] = useState<string>('');\n\n  const addTodoHandler = () => {\n    dispatch(addTodo(todoText));\n    setTodoText('');\n  };\n\n  return (\n    <Section>\n      <form onSubmit={(event) => event.preventDefault()}>\n        <Field kind=\"addons\">\n          <Control expanded>\n            <Input\n              placeholder=\"Add Todo\"\n              size=\"medium\"\n              value={todoText}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setTodoText(e.target.value)\n              }\n            />\n          </Control>\n\n          <Control>\n            <Button\n              color=\"primary\"\n              size=\"medium\"\n              onClick={() => addTodoHandler()}\n            >\n              Add\n            </Button>\n          </Control>\n        </Field>\n      </form>\n    </Section>\n  );\n}\n\nexport default AddTodo;\n","import { v4 as uuidv4 } from 'uuid';\n\nexport function generateUuid() {\n  return uuidv4();\n}\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Todo, TodoState, TodoStatus } from '../models/todos';\nimport { RootState } from '../store';\n\nconst getTodosState = (store: RootState): TodoState => store.todos;\n\nconst getTodoList = (store: RootState) =>\n  getTodosState(store) ? getTodosState(store).allIds : [];\n\nconst getTodoById = (store: RootState, id: string): Todo | undefined =>\n  getTodosState(store) ? getTodosState(store).byIds[id] : undefined;\n\nconst getAllTodos = (store: RootState) =>\n  getTodoList(store).map((id) => getTodoById(store, id));\n\nconst getTodosByStatus = (store: RootState, statusType: TodoStatus) => {\n  const allTodos = getAllTodos(store);\n  return allTodos.filter((todo) => todo?.status === statusType);\n};\n\nexport {\n  getTodosState,\n  getTodoList,\n  getTodoById,\n  getAllTodos,\n  getTodosByStatus,\n};\n","import React from 'react';\nimport { Box, Button, Icon, Title, Media } from 'rbx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { faCheckSquare, faClock } from '@fortawesome/free-regular-svg-icons';\nimport { useDispatch } from 'react-redux';\n\nimport { setTodoStatus } from '../action-creators/todos';\nimport { Todo, TodoStatus } from '../models/todos';\n\ninterface TodoCardProps {\n  todo: Todo;\n}\n\ninterface ActionButtonProps {\n  disabled?: boolean;\n  onClickHandler: () => void;\n}\ninterface TodoCardActionProps {\n  icon: IconProp;\n  tooltip?: string;\n  disabled?: boolean;\n  onClickHandler: () => void;\n}\n\nfunction AwaitButton(props: ActionButtonProps) {\n  return (\n    <TodoCardAction\n      icon={faClock}\n      tooltip={'Mark as Awaiting'}\n      disabled={props.disabled}\n      onClickHandler={props.onClickHandler}\n    />\n  );\n}\n\nfunction DoneButton(props: ActionButtonProps) {\n  return (\n    <TodoCardAction\n      icon={faCheckSquare}\n      tooltip={'Mark as Done'}\n      disabled={props.disabled}\n      onClickHandler={props.onClickHandler}\n    />\n  );\n}\n\nfunction TodoCardAction(props: TodoCardActionProps) {\n  const size = 'medium';\n\n  return (\n    <Button\n      size={size}\n      outlined={false}\n      color=\"white\"\n      tooltip={props.disabled ? 'Already set' : props.tooltip}\n      disabled={props.disabled}\n      onClick={props.onClickHandler}\n    >\n      <Icon size={size}>\n        <FontAwesomeIcon icon={props.icon} size={'lg'} />\n      </Icon>\n    </Button>\n  );\n}\n\nfunction TodoCard(props: TodoCardProps) {\n  const dispatch = useDispatch();\n\n  const onDoneButtonClick = () => {\n    dispatch(setTodoStatus(props.todo.id, TodoStatus.DONE));\n  };\n\n  const onAwaitButtonClick = () => {\n    dispatch(setTodoStatus(props.todo.id, TodoStatus.AWAITING));\n  };\n\n  return (\n    <Box>\n      <Media>\n        <Media.Item>\n          <Title subtitle size={4}>\n            {props.todo.content}\n          </Title>\n          <small>{props.todo.created.toLocaleString()}</small>\n        </Media.Item>\n\n        <Media.Item align=\"right\">\n          <AwaitButton\n            onClickHandler={() => onAwaitButtonClick()}\n            disabled={props.todo.status === TodoStatus.AWAITING}\n          />\n          <DoneButton\n            onClickHandler={() => onDoneButtonClick()}\n            disabled={props.todo.status === TodoStatus.DONE}\n          />\n        </Media.Item>\n      </Media>\n    </Box>\n  );\n}\n\nexport default TodoCard;\n","import React, { useState } from 'react';\nimport { Section, Tab } from 'rbx';\nimport { useTypedSelector } from '../selectors';\n\nimport { TodoStatus } from '../models/todos';\nimport { getTodosByStatus } from '../selectors/todos';\nimport TodoCard from './TodoCard';\n\ninterface TodoListTab {\n  index: TodoListTabIndex;\n  title: string;\n  status: TodoStatus;\n}\n\nenum TodoListTabIndex {\n  TODO = 0,\n  AWAIT = 1,\n  DONE = 2,\n}\n\nfunction TodoList() {\n  const [activeTabIndex, setActiveTabIndex] = useState<TodoListTabIndex>(\n    TodoListTabIndex.TODO\n  );\n\n  const tabConfig: TodoListTab[] = [\n    {\n      index: TodoListTabIndex.TODO,\n      title: 'Todo',\n      status: TodoStatus.TODO,\n    },\n    {\n      index: TodoListTabIndex.AWAIT,\n      title: 'Awaiting',\n      status: TodoStatus.AWAITING,\n    },\n    {\n      index: TodoListTabIndex.DONE,\n      title: 'Done',\n      status: TodoStatus.DONE,\n    },\n  ];\n\n  const isTabSelected = (index: number) => activeTabIndex === index;\n\n  const todos = useTypedSelector((state) =>\n    getTodosByStatus(state, tabConfig[activeTabIndex].status)\n  );\n\n  return (\n    <Section>\n      <Tab.Group fullwidth kind=\"toggle\">\n        {tabConfig.map((item, index) => (\n          <Tab\n            key={`${item.title}-tab`}\n            active={isTabSelected(item.index)}\n            onClick={() => setActiveTabIndex(item.index)}\n          >\n            {item.title}\n          </Tab>\n        ))}\n      </Tab.Group>\n      {todos.map(\n        (todo) => todo && <TodoCard key={`${todo.id}-card`} todo={todo} />\n      )}\n    </Section>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport { Container } from 'rbx';\n\nimport Header from './components/Header';\nimport AddTodo from './components/AddTodo';\nimport TodoList from './components/TodoList';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Container fluid>\n      <Header />\n\n      <AddTodo />\n\n      <TodoList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { TodoAction, TodoActions } from '../action-creators/actionTypes';\nimport { TodoState } from '../models/todos';\n\nexport const initialTodoState: TodoState = {\n  allIds: [],\n  byIds: {},\n};\n\nconst reducer = (state: TodoState = initialTodoState, action: TodoAction) => {\n  switch (action.type) {\n    case TodoActions.ADD: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        allIds: [id, ...state.allIds],\n        byIds: {\n          ...state.byIds,\n          [id]: action.payload,\n        },\n      };\n    }\n    case TodoActions.UPDATE_STATUS: {\n      const { id, status } = action.payload;\n      return {\n        ...state,\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            ...state.byIds[id],\n            status,\n          },\n        },\n      };\n    }\n  }\n  return state;\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport todoReducer from './todos';\n\nexport default combineReducers({\n  todos: todoReducer,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\n\nexport default createStore(rootReducer, devToolsEnhancer({}));\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}